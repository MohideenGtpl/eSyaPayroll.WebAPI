using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using eSyaPayroll.DO;
using eSyaPayroll.IF;
using Microsoft.AspNetCore.Mvc;

namespace eSyaPayroll.WebAPI.Controllers
{
    [Route("api/[controller]/[action]")]
    [ApiController]
    public class EmployeeController : ControllerBase
    {
        private readonly IEmployeeRepository _EmployeeRepository;
        public EmployeeController(IEmployeeRepository EmployeeRepository)
        {
            _EmployeeRepository = EmployeeRepository;
        }

        #region Employee Details Information

        /// <summary>
        /// Getting  Employee Class for drop down.
        /// UI Reffered -Employee Details Info
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetEmployeeClassforCombo()
        {
            var emp_class = await _EmployeeRepository.GetEmployeeClassforCombo();
            return Ok(emp_class);
        }


        /// <summary>
        /// Getting  Employee Details Info.
        /// UI Reffered -Fill Grid Employee Details Info
        /// UI Param- Alphabet
        /// </summary>
        [HttpGet]
        public IActionResult GetEmployeesInfobySuffix(string Alphabet)
        {
            var emp_info = _EmployeeRepository.GetEmployeesInfobySuffix(Alphabet);
            return Ok(emp_info);
        }

        /// <summary>
        /// Getting  Employee Details Info by Employee Number.
        /// UI Reffered - Employee Details Info
        /// UI Param- EmpNumber
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetEmployeeInfobyEmployeeNumber(int EmpNumber)
        {
            var emp_info = await _EmployeeRepository.GetEmployeeInfobyEmployeeNumber(EmpNumber);
            return Ok(emp_info);
        }
        /// <summary>
        /// Insert Or Update Employee Details Info.
        /// UI Reffered -Insert or Update Employee Details Info
        /// </summary>
        [HttpPost]
        public async Task<IActionResult> InsertOrUpdateEmployeeInfo(DO_EmployeeInfo obj)
        {
            var msg = await _EmployeeRepository.InsertOrUpdateEmployeeInfo(obj);
            return Ok(msg);

        }
        #endregion Employee Details Information

        #region Employee Personal Info

        /// <summary>
        /// Getting Languages from Application code by Code Type.
        /// UI Reffered - Employee Personal Information
        /// UI Param- Code Type
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetLanguagebyCodeType(int CodeType)
        {
            var All_lang = await _EmployeeRepository.GetLanguagebyCodeType(CodeType);
            return Ok(All_lang);
        }
        /// <summary>
        /// Getting Employee Languages by EMPloyee Number.
        /// UI Reffered - Employee Personal Information
        /// UI Param- Emp Number
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetEmployeeLanguagebyEmpNumber(int EmpNumber)
        {
            var Emp_lang = await _EmployeeRepository.GetEmployeeLanguagebyEmpNumber(EmpNumber);
            return Ok(Emp_lang);
        }

        /// <summary>
        /// Getting  Employee Personal Info by Employee Number.
        /// UI Reffered - Employee Personal Info
        /// UI Param- EmpNumber
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetEmployeePersonalInfobyEmployeeNumber(int EmpNumber)
        {
            var personal_info = await _EmployeeRepository.GetEmployeePersonalInfobyEmployeeNumber(EmpNumber);
            return Ok(personal_info);
        }
        /// <summary>
        /// Insert Or Update Employee Personal Info.
        /// UI Reffered -Insert or Update Employee Personal Info
        /// </summary>
        [HttpPost]
        public async Task<IActionResult> InsertOrUpdateEmployeePersonalInfo(DO_EmployeePersonalInfo obj)
        {
            var msg = await _EmployeeRepository.InsertOrUpdateEmployeePersonalInfo(obj);
            return Ok(msg);

        }

        #endregion Personal Info

        #region Employee Bank Information

        /// <summary>
        /// Getting  ERCode  for drop down.
        /// UI Reffered -Employee Bank Info
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetERCodeforCombo()
        {
            var emp_Ercode = await _EmployeeRepository.GetERCodeforCombo();
            return Ok(emp_Ercode);
        }

        /// <summary>
        /// Getting  Employee Bank Info by Employee Number.
        /// UI Reffered - Employee Bank Info
        /// UI Param- EmpNumber
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetEmployeeBankInfobyEmpNumber(int EmpNumber)
        {
            var bank_info = await _EmployeeRepository.GetEmployeeBankInfobyEmpNumber(EmpNumber);
            return Ok(bank_info);
        }
        /// <summary>
        /// Insert Bank Info.
        /// UI Reffered -Insert Bank Info
        /// </summary>
        [HttpPost]
        public async Task<IActionResult> InsertEmployeeBankInfo(DO_EmployeeBankInfo obj)
        {
            var msg = await _EmployeeRepository.InsertEmployeeBankInfo(obj);
            return Ok(msg);

        }

        /// <summary>
        /// Update Bank Info.
        /// UI Reffered -Update Bank Info
        /// </summary>
        [HttpPost]
        public async Task<IActionResult> UpdateEmployeeBankInfo(DO_EmployeeBankInfo obj)
        {
            var msg = await _EmployeeRepository.UpdateEmployeeBankInfo(obj);
            return Ok(msg);

        }
        #endregion Employee Bank Information

        #region Employee Salary Information

        /// <summary>
        /// Getting  Employee Salary Info by Employee Number.
        /// UI Reffered - Employee Salary Info
        /// UI Param- EmpNumber
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetEmployeeSalaryInfobyEmpNumber(int EmpNumber)
        {
            var sal_info = await _EmployeeRepository.GetEmployeeSalaryInfobyEmpNumber(EmpNumber);
            return Ok(sal_info);
        }
        /// <summary>
        /// Insert or Update Salary Info.
        /// UI Reffered -Insert or Update Salary Info
        /// </summary>
        [HttpPost]
        public async Task<IActionResult> InsertOrUpdateEmployeeSalaryInfo(DO_EmployeeSalaryInfo obj)
        {
            var msg = await _EmployeeRepository.InsertOrUpdateEmployeeSalaryInfo(obj);
            return Ok(msg);

        }

        #endregion Employee Salary Information

        #region Employee Family Information

        /// <summary>
        /// Getting  Employee Family Info by Employee Number.
        /// UI Reffered - Employee Family Info
        /// UI Param- EmpNumber
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetEmployeeFamilyInfobyEmpNumber(int EmpNumber)
        {
            var family_info = await _EmployeeRepository.GetEmployeeFamilyInfobyEmpNumber(EmpNumber);
            return Ok(family_info);
        }
        /// <summary>
        /// Insert or Update Family Info.
        /// UI Reffered -Insert or Update Family Info
        /// </summary>
        [HttpPost]
        public async Task<IActionResult> InsertOrUpdateEmployeeFamilyInfo(DO_EmployeeFamilyInfo obj)
        {
            var msg = await _EmployeeRepository.InsertOrUpdateEmployeeFamilyInfo(obj);
            return Ok(msg);

        }

        #endregion Employee Family Information

        #region Employee Educational Information

        /// <summary>
        /// Getting  Employee Educational Info by Employee Number.
        /// UI Reffered - Employee Educational Info
        /// UI Param- EmpNumber
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetEmployeeEducationInfobyEmpNumber(int EmpNumber)
        {
            var educational_info = await _EmployeeRepository.GetEmployeeEducationInfobyEmpNumber(EmpNumber);
            return Ok(educational_info);
        }
        /// <summary>
        /// Insert or Update Educational Info.
        /// UI Reffered -Insert or Update Educational Info
        /// </summary>
        [HttpPost]
        public async Task<IActionResult> InsertOrUpdateEmployeeEducationInfo(DO_EmployeeEducationInfo obj)
        {
            var msg = await _EmployeeRepository.InsertOrUpdateEmployeeEducationInfo(obj);
            return Ok(msg);

        }

        #endregion Employee Educational Information

        #region Employee Previous Job Information

        /// <summary>
        /// Getting  Employee Previous Job Info by Employee Number.
        /// UI Reffered - Employee Previous Job Info
        /// UI Param- EmpNumber
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetEmployeePreviousJobInfobyEmpNumber(int EmpNumber)
        {
            var prejob_info = await _EmployeeRepository.GetEmployeePreviousJobInfobyEmpNumber(EmpNumber);
            return Ok(prejob_info);
        }
        /// <summary>
        /// Insert or Update  Previous Job Info.
        /// UI Reffered -Insert or Update  Previous Job Info
        /// </summary>
        [HttpPost]
        public async Task<IActionResult> InsertOrUpdateEmployeePreviousJobInfo(DO_EmployeePreviousJobInfo obj)
        {
            var msg = await _EmployeeRepository.InsertOrUpdateEmployeePreviousJobInfo(obj);
            return Ok(msg);

        }

        #endregion Employee  Previous Job Information

        #region Employee Current Job Information

        /// <summary>
        /// Getting  Employee Current Job Info by Employee Number.
        /// UI Reffered - Employee Current Job Info
        /// UI Param- EmpNumber
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetEmployeeCurrentJobInfobyEmpNumber(int EmpNumber)
        {
            var currentjob_info = await _EmployeeRepository.GetEmployeeCurrentJobInfobyEmpNumber(EmpNumber);
            return Ok(currentjob_info);
        }
        /// <summary>
        /// Insert or Update  Current Job Info.
        /// UI Reffered -Insert or Update  Current Job Info
        /// </summary>
        [HttpPost]
        public async Task<IActionResult> InsertOrUpdateEmployeeCurrentJobInfo(DO_EmployeeCurrentJobInfo obj)
        {
            var msg = await _EmployeeRepository.InsertOrUpdateEmployeeCurrentJobInfo(obj);
            return Ok(msg);

        }

        #endregion Employee  Current Job Information

        #region Employee Fixed Deduction Information

        /// <summary>
        /// Getting  Employee Fixed Deduction Info by Employee Number.
        /// UI Reffered - Employee Fixed Deduction Info
        /// UI Param- EmpNumber
        /// </summary>
        [HttpGet]
        public async Task<IActionResult> GetEmployeeFixedDeductionInfobyEmpNumber(int EmpNumber)
        {
            var fixed_info = await _EmployeeRepository.GetEmployeeFixedDeductionInfobyEmpNumber(EmpNumber);
            return Ok(fixed_info);
        }
        /// <summary>
        /// Insert or Update  Fixed Deduction Info.
        /// UI Reffered -Insert or Update  Fixed Deduction Info
        /// </summary>
        [HttpPost]
        public async Task<IActionResult> InsertOrUpdateEmployeeFixedDeductionInfo(DO_EmployeeFixedDeductionInfo obj)
        {
            var msg = await _EmployeeRepository.InsertOrUpdateEmployeeFixedDeductionInfo(obj);
            return Ok(msg);

        }

        #endregion Employee  Fixed Deduction Information

    }
}
